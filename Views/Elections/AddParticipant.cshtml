@using Microsoft.AspNetCore.Http.Extensions
@model UserViewModel
@{
    ViewBag.PageTitle = "Tambah Peserta";
    string currentUrl = Context.Request.GetDisplayUrl();
    var startNumber = (Model.CurrentPage - 1) * Model.LimitEntry + 1;
}
@* alert success *@
@{
    if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>Berhasil!</strong> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <strong>Peringatan!</strong> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
}

<form class="d-none" id="usersForm">
</form>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                @* <form asp-action="AddParticipant" method="post"> *@
                <form>
                    <div class="mb-3 d-grid gap-2 d-md-block">
                        <button type="button" class="btn btn-primary" formaction="/Elections/Store/@Model.ElectionId">
                            <i class="bi bi-plus"></i> Tambahkan
                        </button>
                        <button type="button" class="btn btn-secondary" data-bs-toggle="modal"
                            data-bs-target="#tagsModal">
                            <i class="bi bi-filter-left"></i> Saring Penanda
                        </button>
                        <a asp-action="Users" asp-route-id="@(Model.ElectionId)" class="btn btn-secondary">
                            <i class="bi bi-arrow-return-left"></i> Kembali
                        </a>
                    </div>
                    <div class="modal fade" tabindex="-1" id="tagsModal">
                        <div class="modal-dialog modal-dialog-scrollable">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Saring Penanda</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                        aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <ul class="list-group">
                                        @foreach (var tag in Model.Tags)
                                        {
                                            <li class="list-group-item">
                                                <div class="form-check">
                                                    <input class="form-check-input" name="SelectedTags[]" type="checkbox"
                                                        value="@(tag.Id)" id="tag@(tag.Id)"
                                                    @(Model.SelectedTags.Contains(tag.Id) ? "checked" : "")>
                                                    <label class="form-check-label" for="tag@(tag.Id)">
                                                        @(tag.Name)
                                                    </label>
                                                </div>
                                            </li>
                                        }
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                        Tutup
                                    </button>
                                    <button class="btn btn-primary" type="submit">Terapkan</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    @(ViewHelper.GenerateSearchAndLimitForm(Model.LimitEntry, Model.Search ?? "", "Cari pengguna..."))
                    <p>
                        Menampilkan @Model.Entries.Count dari @(Model.TotalFilteredEntries) data (difilter dari total
                        @(Model.TotalEntries) data)

                    </p>
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>
                                        <input type="checkbox" id="checkAll" class="form-check-input" />
                                    </th>
                                    <th>
                                        <a href="@(UrlHelper.SetOrderBy(currentUrl,"Code"))" class="text-dark">
                                            ID
                                        </a>
                                    </th>
                                    <th>
                                        <a href="@(UrlHelper.SetOrderBy(currentUrl,"Name"))" class="text-dark">
                                            Nama
                                        </a>
                                    </th>
                                    <th>
                                        <a href="@(UrlHelper.SetOrderBy(currentUrl,"Gender"))" class="text-dark">
                                            Jenis Kelamin
                                        </a>
                                    </th>
                                    <th>Penanda</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model.Entries.Where(id => id.Id != 1))
                                {
                                    <tr>
                                        <td>
                                            <input type="checkbox" class="user-checkbox form-check-input" value="@user.Id"
                                                name="SelectedUsers[]" @(Model.SelectedUsers.Contains(user.Id) ? "checked" :
                                            "")>
                                        </td>
                                        <td><a href="#" onclick="copyText(event)" data-bs-title="Salin">@user.Code</a></td>
                                        <td>@user.Name</td>
                                        <td>@(user.Gender == false ? "Laki-laki" : "Perempuan")</td>
                                        <td style="max-width: 100px;">
                                            @foreach (var taguser in Model.TagUsers.Where(userid => userid.UserId ==
                                           user.Id))
                                            {
                                                <span class="badge bg-secondary">@taguser.Tag.Name</span>
                                            }
                                        </td>
                                    </tr>
                                }
                                @if (Model.Entries.Count == 0)
                                {
                                    @(ViewHelper.GenerateNoDataRow(6))
                                }
                            </tbody>

                        </table>
                    </div>
                    @(ViewHelper.GeneratePagination(currentUrl, Model.CurrentPage, Model.PageCount))
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    const checkAllBox = document.getElementById("checkAll");
    const userCheckboxes = document.querySelectorAll(".user-checkbox");
    const usersForm = document.getElementById("usersForm");

    checkAllBox.addEventListener("change", function () {
        const isChecked = this.checked;
        userCheckboxes.forEach(cb => {
            cb.checked = isChecked;
            cb.dispatchEvent(new Event("change"));
        });
    });

    userCheckboxes.forEach(checkbox => {
        checkbox.addEventListener("change", function () {
            checkAllBox.checked = Array.from(userCheckboxes).every(cb => cb.checked);

            if (this.checked) {
                usersForm.insertAdjacentHTML("beforeend", `<input type="checkbox" class="user-checkbox" value="${this.value}" name="SelectedUsers[]">`);
            } else {
                const input = usersForm.querySelector(`input[value="${this.value}"]`);
                input.remove();
            }

        });
    });

</script>
